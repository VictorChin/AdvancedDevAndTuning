<html>

<head>

  <title>YOUNG MANAGERS Scenario - Using a Table Function</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

  <meta name="Author" content="Bryn Llewellyn">
  <link rel="stylesheet" href="../Content.css" type="text/css">
</head>


<body>
<div class="Content_Div" style="left: 24px; top: 26px">
  <h3>-- Sample To Illustrate Table Functions And Cursor Expressions</h3>

  <h4><i>-- &#147;YOUNG MANAGERS&#148; SCENARIO</i></h4>
  <p>-- Find those managers in the employees table, the majority of whose direct 
    reports were hired <br>
    -- before the manager</p>
  <p class="Updated"> -- USING A TABLE FUNCTION</p>

  <pre>-- Connect hr/hr@9i
set serveroutput on

drop <span class="Code_Emphasize">package My_Types</span>;
drop <span class="Code_Emphasize">function Young_Managers_Fn</span>;


create or replace <span class="Code_Emphasize">package My_Types</span> is
  type employee_ids_tab is table of employees.employee_id%type;
end My_Types;
/
Show Errors
   
create or replace <span class="Code_Emphasize">function Young_Managers_Fn</span>

  return My_Types.employee_ids_tab
  pipelined
is
  cursor managers is
    select
      employee_id, hire_date,
      cursor (
               select hire_date

                 from employees reports
                 where reports.manager_id = managers.employee_id
             )
      from employees managers;
      manager_employee_id      employees.employee_id%type;
      manager_hire_date        employees.hire_date%type;
      reports                  sys_refcursor;
      type report_hire_date_t  is table of employees.hire_date%type
                               index by binary_integer;

      report_hire_dates        report_hire_date_t;
      before integer; after integer;
begin
  open managers;
  loop
    before:=0; after:=0;
    fetch managers into manager_employee_id, manager_hire_date, reports;
    exit when managers%notfound;
    fetch reports bulk collect into report_hire_dates;
    if report_hire_dates.count &gt; 0

    then
      for j in report_hire_dates.first..report_hire_dates.last
      loop
        case report_hire_dates(j) &lt;= manager_hire_date
          when true  then before := before + 1;
          when false then after  := after + 1;
        end case;
      end loop;
    end if;
    if before &gt; after then
      pipe row ( manager_employee_id );

    end if;
  end loop;
  close managers;
  return;
end Young_Managers_Fn;
/
Show Errors
   
create or replace <span class="Code_Emphasize">view young_managers</span> as
  select column_value manager_employee_id from table (Young_Managers_Fn());
   
   

 </pre>
</div>
<p>&nbsp;</p></body></html>

